/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-11-04 19:18:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.groupware.chatting;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import employee.model.vo.Employee;
import chatting.model.vo.Chatting;
import java.util.ArrayList;
import employee.model.vo.Company;

public final class chattingMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("employee.model.vo.Company");
    _jspx_imports_classes.add("chatting.model.vo.Chatting");
    _jspx_imports_classes.add("employee.model.vo.Employee");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	Company company = (Company)session.getAttribute("comp"); 
	String comp = company.getDriver() +"ł"+ company.getUrl() +"ł"+ company.getId() +"ł"+ company.getPassword();
	Employee loginEmp = (Employee)session.getAttribute("loginEmp");
	
	//참여중인방 번호, 사번, 타이틀
	ArrayList<Chatting> chatList = (ArrayList<Chatting>)request.getAttribute("chatList");
	
	//친구 리스트
	ArrayList<Employee> empList = (ArrayList<Employee>)request.getAttribute("empList"); 
	
	//채팅방 마지막글들
	ArrayList<Chatting> lastContents = (ArrayList<Chatting>)request.getAttribute("lastContents"); 

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>채팅</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("h6{\r\n");
      out.write("\tmargin:0;\r\n");
      out.write("\tpadding:0;\r\n");
      out.write("}\r\n");
      out.write(".junstyle{\r\n");
      out.write("\tcolor : #c7bee8;\r\n");
      out.write("\tfont-size: 20px;\r\n");
      out.write("\tmargin : 10px;\r\n");
      out.write("\tdisplay : inline;\r\n");
      out.write("\tfloat : right;\r\n");
      out.write("}\r\n");
      out.write(".jun-box-size{\r\n");
      out.write("\twidth: 120px;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tbackground:#f3f1fa;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".jun-a{\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\ttext-decoration:none;\r\n");
      out.write("}\r\n");
      out.write(".custom-menu {\r\n");
      out.write("    z-index:1000;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    border: 1px solid silver;\r\n");
      out.write("    padding: 2px;\r\n");
      out.write("    border-radius: 5px 5px 5px 5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"/nado/resources/js/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/nado/resources/css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/nado/resources/groupware/bower_components/font-awesome/css/font-awesome.min.css\">\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-lg-12\">\r\n");
      out.write("\t\t\t\t<div style=\"display:inline;\">\r\n");
      out.write("\t\t\t\t채팅\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"junstyle\">\r\n");
      out.write("\t\t\t\t\t<a class=\"jun-a\" data-toggle=\"modal\" href=\"#junModal\"><i class=\"fa fa-comments junstyle\"></i>방만들기</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-lg-12\">\r\n");
      out.write("\t\t\t\t<ul class=\"nav nav-tabs\">\r\n");
      out.write("\t\t\t\t\t<li class=\"nav-item jun-box-size\"><a class=\"nav-link active jun-a\"\r\n");
      out.write("\t\t\t\t\t\tdata-toggle=\"tab\" href=\"#friends\">사원목록</a></li>\r\n");
      out.write("\t\t\t\t\t<li class=\"nav-item jun-box-size\"><a class=\"nav-link jun-a\" data-toggle=\"tab\"\r\n");
      out.write("\t\t\t\t\t\thref=\"#chatList\">채팅리스트</a></li>\r\n");
      out.write("\t\t\t\t\t<li class=\"nav-item jun-box-size\"><a class=\"nav-link jun-a\" data-toggle=\"tab\"\r\n");
      out.write("\t\t\t\t\t\thref=\"#open\">오픈채팅방</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t<div class=\"tab-content\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tab-pane fade show active\" id=\"friends\">\r\n");
      out.write("\t\t\t\t\t\t<!-- 친구리스트 -->\r\n");
      out.write("\t\t\t\t\t\t<table class=\"table table-hover\">\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><img style=\"width:30px; height:30px;\" src=\"/nado/resources/groupware/employee_profile/\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
 if(loginEmp.getMyProfile() != null){ 
      out.print( loginEmp.getMyProfile() );
}else{
      out.write("default-profile.png");
}
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<a href=\"#\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print( loginEmp.getEmpName() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\t\r\n");
      out.write("\t\t\t\t\t\t");
 for(Employee list : empList){
								if(!list.getEmpId().equals(loginEmp.getEmpId())){
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td ondblclick=\"clroom(");
      out.print( loginEmp.getEmpId() );
      out.write(',');
      out.print( list.getEmpId() );
      out.write(");\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<img style=\"width:30px; height:30px;\" src=\"/nado/resources/groupware/employee_profile/");
 if(list.getMyProfile() != null){ 
      out.print( list.getMyProfile() );
}else{
      out.write("default-profile.png");
}
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print( list.getEmpName() );
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t");
}} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- 채팅방 리스트 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"tab-pane fade\" id=\"chatList\">\t\t\t\t\r\n");
      out.write("\t\t\t\t\t");
 for(Chatting clist: chatList){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
for(Chatting last : lastContents){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
 if(clist.getChatRoomNo() == last.getChatRoomNo()){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div ondblclick=\"rlist(");
      out.print( clist.getChatRoomNo() );
      out.write(");\" id=\"c");
      out.print( clist.getChatRoomNo() );
      out.write("\">\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h6 id=\"");
      out.print( clist.getChatTitle() );
      out.write("\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<strong>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
      out.print( clist.getChatTitle() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</strong>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</h6>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<p id=\"");
      out.print( clist.getChatRoomNo() );
      out.write('"');
      out.write('>');
      out.print( last.getChatContent() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t");
}}} 
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"tab-pane fade\" id=\"open\">\r\n");
      out.write("\t\t\t\t\t\t<h3>여긴 오픈채팅방</h3>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"nad\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"modal fade\" id=\"junModal\" role=\"dialog\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">방만들기</h4>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">×</button>\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"room_title\">방 이름<input class=\"input-control\" type=\"text\" id=\"room_title\"></label>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div style=\"float:left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div style=\"overflow:auto; width:200px; height:200px; border:1px solid silver\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
 for(Employee eList : empList){ if(!eList.getEmpId().equals(loginEmp.getEmpId())){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div style=\"text-align:center;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"");
      out.print( eList.getEmpId() );
      out.write("\"><img style=\"width:30px; height:30px;\" src=\"/nado/resources/groupware/employee_profile/");
 if(eList.getMyProfile() != null){ 
      out.print( eList.getMyProfile() );
}else{
      out.write("default-profile.png");
}
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print( eList.getEmpName() );
      out.write("</label>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"");
      out.print( eList.getEmpId() );
      out.write("\" name=\"invitedUsers\" value=\"");
      out.print( eList.getEmpId() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
}} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\" onclick=\"inviteUser();\">초대</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" >취소</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"/nado/resources/js/bootstrap.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"/nado/resources/js/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//오픈시 커넥션 연결\r\n");
      out.write("connection();\r\n");
      out.write("\r\n");
      out.write("//웹소켓\r\n");
      out.write("var ws;\r\n");
      out.write("\r\n");
      out.write("//내사번\r\n");
      out.write("var empId = \"");
      out.print(loginEmp.getEmpId());
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("//회사정보 저장\r\n");
      out.write("var comp= \"");
      out.print( comp );
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("//자식창열기\r\n");
      out.write("var openCh;\r\n");
      out.write("\r\n");
      out.write("function connection(){\r\n");
      out.write("\t\r\n");
      out.write("\tws = new WebSocket(\"ws://127.0.0.1:8800/nado/chatserver\");\r\n");
      out.write("\r\n");
      out.write("\tws.onopen = function(event){\r\n");
      out.write("\t\t//첫 접속시 사원 사번 꺼내서 보내기\r\n");
      out.write("\t  \tws.send(\"empIdł\" + empId);\r\n");
      out.write("\t\t//첫 접속시 회사 보내기\r\n");
      out.write("\t  \tws.send(\"compł\" + comp);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tws.onmessage = function(event){\r\n");
      out.write("\t\tonMessage(event);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tws.onerror = function(event){\r\n");
      out.write(" \t\tonError(event);\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tws.onclose = function(event){\r\n");
      out.write("   \t\tonClose(event);\r\n");
      out.write("\t};\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function clroom(myid, userid){\r\n");
      out.write("\tws.send(\"searchRoomł\"+ myid + \"ł\" + userid);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function rlist(roomNo){\r\n");
      out.write("\tws.send(\"searchListRoomł\"+ roomNo);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\tfunction onMessage(event){\r\n");
      out.write("\t\tvar message = event.data.split(\"ł\");\r\n");
      out.write("\t\tvar mHead = message[0];\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(mHead==\"openRoom\"){\r\n");
      out.write("\t\t\tvar mBody = message[1];\r\n");
      out.write("\t\t\topenCh = window.open(\"/nado/chto?myid=\"+empId+\"&roomNo=\"+mBody, mBody, \"width=420px, height=660px, menubar=no, status=no, toolbar=no\");\t\r\n");
      out.write("\t\t}else if(mHead ==\"sendToMain\"){\r\n");
      out.write("\t\t\t//받은내용(방번호+\"ł\"+사번+\"ł\"+이름+\"ł\"+내용+\"ł\"+타이틀)  //사번 필요없을지도 모름 나중에 바꿈\r\n");
      out.write("\t\t\tvar roomNo = message[1];\r\n");
      out.write("\t\t\tvar eId = message[2];\r\n");
      out.write("\t\t\tvar name = message[3];\r\n");
      out.write("\t\t\tvar content = message[4];\r\n");
      out.write("\t\t\tvar title = message[5];\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($(\"#c\"+roomNo).length > 0){\r\n");
      out.write("\t\t\t\t$(\"#c\"+roomNo).remove();\r\n");
      out.write("\t \t\t}\r\n");
      out.write("\t \t\t\t$(\"#chatList\").prepend(\"<div ondblclick='rlist(\"+roomNo+\");' id='c\"+roomNo+\"'><strong>\"+title+\"</strong><p id='\"+roomNo+\"'>\"+content+\"</p></div>\"); \t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("var $room_title = $(\"#room_title\");\r\n");
      out.write("\t\tfunction inviteUser(){\r\n");
      out.write("\t\t\tif($room_title.val() == \"\"){\r\n");
      out.write("\t\t\t\talert(\"방 이름을 입력해주세요.\");\r\n");
      out.write("\t\t\t}else if($(\"input:checkbox[name='invitedUsers']:checked\").length ==0){\r\n");
      out.write("\t\t\t\talert(\"한명 이상을 선택해주세요.\");\r\n");
      out.write("\t\t\t\t$room_title.val(\"\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tvar plus = \"createChatł\" + empId + \"ł\" + $room_title.val();\r\n");
      out.write("\t\t\t\t$(\"input:checkbox[name='invitedUsers']\").each(function() {\r\n");
      out.write("\t\t\t\t\tif ($(this).is(\":checked\") == true) {\r\n");
      out.write("\t\t\t\t\t\tplus += \"ł\" + $(this).val();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\tws.send(plus);\r\n");
      out.write("\t\t\t\t$room_title.val(\"\");\r\n");
      out.write("\t\t\t\t$(\"input:checkbox[name='invitedUsers']\").each(function() {\r\n");
      out.write("\t\t\t\t\tif ($(this).is(\":checked\") == true) {\r\n");
      out.write("\t\t\t\t\t\t$(this).prop(\"checked\", false);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("// \t$(document).bind(\"contextmenu\", function(event) {\r\n");
      out.write("// \t\tevent.preventDefault();\r\n");
      out.write("// \t\t$(\"<div class='custom-menu'>제목 바꾸기</div><div class='custom-menu'>방 나가기</div>\").appendTo(\"body\").css({\r\n");
      out.write("// \t\t\ttop : event.pageY + \"px\",\r\n");
      out.write("// \t\t\tleft : event.pageX + \"px\"\r\n");
      out.write("// \t\t});\r\n");
      out.write("// \t}).bind(\"click\", function(event) {\r\n");
      out.write("// \t\t$(\"div.custom-menu\").hide();\r\n");
      out.write("// \t});\r\n");
      out.write("// \tdocument.addEventListener('contextmenu', function() {\r\n");
      out.write("// \t\tevent.preventDefault();\r\n");
      out.write("// \t});\r\n");
      out.write("// \tdocument.addEventListener('mousedown', function() {\r\n");
      out.write("// \t\tif ((event.button == 2) || (event.which == 3)) {\r\n");
      out.write("// \t\t\tconsole.log(\"마우스 오른쪽 작동\");\r\n");
      out.write("// \t\t}\r\n");
      out.write("// \t});\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"/nado/resources/js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
